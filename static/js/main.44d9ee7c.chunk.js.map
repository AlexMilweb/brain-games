{"version":3,"sources":["components/PlayingField/PlayingField.styled.js","components/PlayingField/PlayingField.js","components/Main/Main.styled.js","components/Main/Main.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["PlayingFieldStyled","styled","div","_templateObject","props","hidden","css","_templateObject2","FieldContainer","_templateObject3","widthField","FieldItem","_templateObject4","active","_templateObject5","isWrong","_templateObject6","PlayingField","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleClick","e","onClick","target","getAttribute","renderFieldItems","_this$props","fieldArray","map","item","index","react_default","a","createElement","id","key","inherits","createClass","value","_this$props2","React","Component","MainStyled","Main_styled_templateObject","Header","header","Main_styled_templateObject2","GameName","h1","Main_styled_templateObject3","StartScreen","Main_styled_templateObject4","StartButton","button","Main_styled_templateObject5","Level","Main_styled_templateObject6","InfoPanel","_templateObject7","Main","state","level","numCells","gameProcessArray","gameProcess","isStartGame","rightAnswersCount","wrongAnswersCount","reloadGame","fatigueRate","getAverageLevel","statistic","JSON","parse","localStorage","getItem","Math","round","reduce","b","randomInteger","num","floor","random","getWidthField","i","generateRandomArray","array","push","j","setState","slice","handleStartGame","setTimeout","handleClickOnItem","numId","replace","prevState","toConsumableArray","setItem","stringify","_this$state","isWrongs","_this$state2","PlayingField_PlayingField","AppStyled","App_styled_templateObject","App","Main_Main","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.44d9ee7c.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport const PlayingFieldStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  background-color: white;\n  margin-bottom: auto;\n\n  ${props =>\n    props.hidden &&\n    css`\n      pointer-events: none;\n    `};\n`;\n\nexport const FieldContainer = styled.div`\n  width: ${props => props.widthField * 40}px;\n  display: flex;\n  flex-wrap: wrap;\n  box-shadow: 0 0 0 1px #777;\n`;\n\nexport const FieldItem = styled.div`\n  width: 40px;\n  height: 40px;\n  box-shadow: inset 0 0 0 1px #777;\n  cursor: pointer;\n\n  ${props =>\n    props.active &&\n    css`\n      background-color: #225af4;\n      box-shadow: inset 0 0 10px 5px #0006bc;\n    `};\n\n  ${props =>\n    props.isWrong &&\n    css`\n      background-color: #ff7c7c;\n      box-shadow: inset 0 0 10px 5px #d60000;\n    `};\n`;\n","import React from \"react\";\nimport pt from \"prop-types\";\nimport {\n  PlayingFieldStyled,\n  FieldItem,\n  FieldContainer\n} from \"./PlayingField.styled\";\n\nexport class PlayingField extends React.Component {\n  static propTypes = {\n    active: pt.bool,\n    hidden: pt.bool,\n    fieldArray: pt.array,\n    widthField: pt.number,\n    onClick: pt.func\n  };\n\n  handleClick = e => {\n    this.props.onClick(e.target.getAttribute(\"id\"));\n  };\n\n  renderFieldItems = () => {\n    const { fieldArray, hidden } = this.props;\n\n    return fieldArray.map((item, index) => {\n      return (\n        <FieldItem\n          onClick={this.handleClick}\n          id={`field_${index}`}\n          key={index}\n          active={(!hidden && item !== \"\") || item === \"o\"}\n          isWrong={item === \"x\"}\n        />\n      );\n    });\n  };\n\n  render() {\n    const { widthField, hidden } = this.props;\n\n    return (\n      <PlayingFieldStyled hidden={!hidden}>\n        <FieldContainer widthField={widthField}>\n          {this.renderFieldItems()}\n        </FieldContainer>\n      </PlayingFieldStyled>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const MainStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 700px;\n  min-height: 700px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 50px;\n  border-radius: 6px;\n  background-color: #111;\n`;\n\nexport const Header = styled.header`\n  margin-bottom: auto;\n`;\n\nexport const GameName = styled.h1`\n  color: white;\n  font-size: 30px;\n  text-align: center;\n`;\n\nexport const StartScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  border-radius: 6px;\n  border: 1px solid #3dfff8;\n  margin-bottom: auto;\n`;\n\nexport const StartButton = styled.button`\n  padding: 11px 16px;\n  border-radius: 6px;\n  background-color: #3dfff8;\n  border: none;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n\nexport const Level = styled.div`\n  color: white;\n  font-size: 14px;\n  max-width: 200px;\n\n  span {\n    margin-left: 10px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n`;\n\nexport const InfoPanel = styled.div`\n  width: 300px;\n  border-radius: 6px;\n  border: 1px solid #3dfff8;\n  padding: 10px;\n`;\n","import React from \"react\";\nimport { PlayingField } from \"../PlayingField/PlayingField\";\nimport {\n  MainStyled,\n  GameName,\n  StartScreen,\n  StartButton,\n  Level,\n  InfoPanel,\n  Header\n} from \"./Main.styled\";\n\nexport class Main extends React.Component {\n  state = {\n    level: 2,\n    widthField: 0,\n    numCells: 0,\n    fieldArray: [],\n    gameProcessArray: [],\n    gameProcess: false,\n    isStartGame: false,\n    rightAnswersCount: 0,\n    wrongAnswersCount: 0,\n    reloadGame: false,\n    fatigueRate: 0\n  };\n\n  componentDidMount() {\n    if (!localStorage.getItem(\"statistic\")) {\n      localStorage.setItem(\"statistic\", JSON.stringify([]));\n    }\n\n    this.setState({\n      level: this.getAverageLevel()\n    });\n  }\n\n  componentDidUpdate() {\n    const { rightAnswersCount, level, reloadGame } = this.state;\n\n    if (rightAnswersCount === level) {\n      this.setState(prevState => {\n        const isWrongs = prevState.wrongAnswersCount > 0;\n        const nextLevel = isWrongs\n          ? prevState.level - prevState.fatigueRate\n          : prevState.level + 1;\n\n        return {\n          level: nextLevel,\n          rightAnswersCount: 0,\n          wrongAnswersCount: 0,\n          reloadGame: true,\n          fatigueRate: isWrongs ? prevState.fatigueRate + 1 : 0\n        };\n      });\n\n      const statistic = JSON.parse(localStorage.getItem(\"statistic\"));\n      statistic.push(level);\n\n      localStorage.setItem(\"statistic\", JSON.stringify(statistic));\n      this.getAverageLevel();\n    }\n\n    if (reloadGame) {\n      this.handleStartGame();\n    }\n  }\n\n  getAverageLevel = () => {\n    const statistic = JSON.parse(localStorage.getItem(\"statistic\"));\n    if (statistic.length < 2) {\n      return 2;\n    } else {\n      return Math.round(statistic.reduce((a, b) => a + b) / statistic.length);\n    }\n  };\n\n  randomInteger = num => Math.floor(Math.random() * (num + 1));\n\n  getWidthField = () => {\n    const { level } = this.state;\n    let widthField;\n\n    for (let i = 2; i * i <= level * 3; i++) {\n      widthField = i;\n    }\n    return widthField;\n  };\n\n  generateRandomArray = level => {\n    const widthField = this.getWidthField();\n    const numCells = widthField * widthField;\n\n    let array = [];\n\n    for (let i = 0; i < numCells; i++) {\n      array.push(\"\");\n    }\n\n    for (let j = 0; j < level; j++) {\n      let index;\n\n      do {\n        index = this.randomInteger(numCells);\n      } while (array[index] !== \"\");\n\n      array[index] = j;\n    }\n\n    this.setState({\n      fieldArray: array,\n      gameProcessArray: array.slice(),\n      widthField: widthField,\n      numCells: numCells\n    });\n  };\n\n  handleStartGame = () => {\n    const { level } = this.state;\n\n    this.generateRandomArray(level);\n\n    this.setState({\n      isStartGame: true,\n      gameProcess: false,\n      reloadGame: false\n    });\n\n    setTimeout(() => {\n      this.setState({\n        gameProcess: true\n      });\n    }, 3000);\n  };\n\n  handleClickOnItem = id => {\n    const { fieldArray } = this.state;\n\n    const numId = +id.replace(\"field_\", \"\");\n\n    if (fieldArray[numId] !== \"\" && fieldArray[numId] !== \"x\") {\n      this.setState(prevState => {\n        return {\n          gameProcessArray: [\n            ...prevState.gameProcessArray.slice(0, numId),\n            (prevState.gameProcessArray[numId] = \"o\"),\n            ...prevState.gameProcessArray.slice(numId + 1)\n          ],\n          rightAnswersCount: prevState.rightAnswersCount + 1\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          gameProcessArray: [\n            ...prevState.gameProcessArray.slice(0, numId),\n            (prevState.gameProcessArray[numId] = \"x\"),\n            ...prevState.gameProcessArray.slice(numId + 1)\n          ],\n          wrongAnswersCount: prevState.wrongAnswersCount + 1\n        };\n      });\n    }\n  };\n\n  render() {\n    const {\n      fieldArray,\n      widthField,\n      gameProcess,\n      gameProcessArray,\n      isStartGame,\n      level,\n      fatigueRate\n    } = this.state;\n\n    return (\n      <MainStyled>\n        <Header>\n          <GameName>Тренажер памяти</GameName>\n          {isStartGame && (\n            <InfoPanel>\n              <Level>\n                Текущий уровень: <span>{level}</span>\n              </Level>\n              <Level>\n                Уровень усталости: <span>{fatigueRate}</span>\n              </Level>\n            </InfoPanel>\n          )}\n        </Header>\n\n        {isStartGame ? (\n          <PlayingField\n            hidden={gameProcess}\n            fieldArray={gameProcess ? gameProcessArray : fieldArray}\n            widthField={widthField}\n            onClick={this.handleClickOnItem}\n          />\n        ) : (\n          <StartScreen>\n            <Level>\n              Средний уровень запоминания ячеек: <span>{level}</span>\n            </Level>\n            <StartButton onClick={this.handleStartGame}>Старт игры</StartButton>\n          </StartScreen>\n        )}\n      </MainStyled>\n    );\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport const AppStyled = styled.div``;\r\n","import React from \"react\";\nimport { Main } from \"../Main/Main\";\nimport { AppStyled } from \"./App.styled\";\n\nfunction App() {\n  return (\n    <AppStyled>\n      <Main />\n    </AppStyled>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}